digraph {
	"node0" [shape="rect",color="black",label=<v := main::source()<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ v: #<BR/>[inferred: #, state: _|_] ]]<BR/>}} -&gt; [v]>];
	"node1" [shape="rect",color="gray",label=<Open block: 'go-testcases/taint/t8/t8.go':17:2<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/taint/t8/t8.go':15:1]:v: #<BR/>['go-testcases/taint/t8/t8.go':17:2]:['go-testcases/taint/t8/t8.go':15:1]:v: #<BR/>['go-testcases/taint/t8/t8.go':17:2]:v: #<BR/>v: #<BR/>[inferred: #, state: _|_] ]]<BR/>}} -&gt; [['go-testcases/taint/t8/t8.go':17:2]:v, v]>];
	"node2" [shape="rect",color="gray",label=<Open block: 'go-testcases/taint/t8/t8.go':15:1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/taint/t8/t8.go':15:1]:v: #<BR/>v: #<BR/>[inferred: #, state: _|_] ]]<BR/>}} -&gt; [['go-testcases/taint/t8/t8.go':15:1]:v, v]>];
	"node3" [shape="rect",color="gray",label=<main::sink(v)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ v: #<BR/>[inferred: _|_, state: _|_] ]]<BR/>}} -&gt; [call_ret_value@'go-testcases/taint/t8/t8.go':23:7]>];
	"node4" [shape="rect",color="gray",label=<Close block: 'go-testcases/taint/t8/t8.go':15:1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ v: #<BR/>[inferred: _, state: _|_] ]]<BR/>}} -&gt; []>];
	"node5" [shape="rect",color="gray",label=<v = &quot;qwe&quot;<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/taint/t8/t8.go':15:1]:v: #<BR/>['go-testcases/taint/t8/t8.go':17:2]:['go-testcases/taint/t8/t8.go':15:1]:v: #<BR/>['go-testcases/taint/t8/t8.go':17:2]:v: _<BR/>v: _<BR/>[inferred: _, state: _|_] ]]<BR/>}} -&gt; [v]>];
	"node6" [shape="rect",color="gray",label=<main::sink(v)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/taint/t8/t8.go':15:1]:v: #<BR/>['go-testcases/taint/t8/t8.go':17:2]:['go-testcases/taint/t8/t8.go':15:1]:v: #<BR/>['go-testcases/taint/t8/t8.go':17:2]:v: _<BR/>v: _<BR/>[inferred: _|_, state: _|_] ]]<BR/>}} -&gt; [call_ret_value@'go-testcases/taint/t8/t8.go':19:9]>];
	"node7" [shape="rect",color="gray",label=<Close block: 'go-testcases/taint/t8/t8.go':17:2<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/taint/t8/t8.go':15:1]:v: #<BR/>v: _<BR/>[inferred: _|_, state: _|_] ]]<BR/>}} -&gt; []>];
	"node8" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ v: #<BR/>[inferred: _|_, state: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node9" [shape="rect",color="gray",label=<v := main::source()<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/taint/t8/t8.go':15:1]:v: #<BR/>v: #<BR/>[inferred: #, state: _|_] ]]<BR/>}} -&gt; [v]>];
	"node10" [shape="rect",color="gray",label=<fmt::Println(v)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/taint/t8/t8.go':15:1]:v: #<BR/>v: _<BR/>[inferred: _, state: _|_] ]]<BR/>}} -&gt; [v]>];
	"node1" -> "node5" [color="black"];
	"node2" -> "node9" [color="black"];
	"node3" -> "node8" [color="black"];
	"node4" -> "node3" [color="black"];
	"node5" -> "node6" [color="black"];
	"node6" -> "node7" [color="black"];
	"node7" -> "node10" [color="black"];
	"node9" -> "node1" [color="black"];
	"node0" -> "node2" [color="black"];
	"node10" -> "node4" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
