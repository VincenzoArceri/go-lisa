digraph {
	"node0" [shape="rect",color="black",label=<m1 := keyedLiteral(map[int32]int32)(1, 2, 3)<BR/>{{<BR/>heap [[ m1: [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39] ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39: [1, 3]<BR/>[stack: [1, 3]] ]]<BR/>}} -&gt; [m1]>];
	"node1" [shape="rect",color="gray",label=<m2::2(m2, 2) = 100<BR/>{{<BR/>heap [[ m1: [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39]<BR/>m2: [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':25:1] ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39: [1, 50]<BR/>heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':25:1: [1, 100]<BR/>[stack: [1, 100]] ]]<BR/>}} -&gt; [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':25:1]>];
	"node2" [shape="rect",color="gray",label=<m2 := m1<BR/>{{<BR/>heap [[ m1: [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39]<BR/>m2: [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':25:1] ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39: [1, 3]<BR/>heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':25:1: [1, 3]<BR/>[stack: [1, 3]] ]]<BR/>}} -&gt; [m2]>];
	"node3" [shape="rect",color="gray",label=<m1::1(m1, 1) = 50<BR/>{{<BR/>heap [[ m1: [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39]<BR/>m2: [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':25:1] ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39: [1, 50]<BR/>heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':25:1: [1, 3]<BR/>[stack: [1, 50]] ]]<BR/>}} -&gt; [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39]>];
	"node4" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ m1: [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39]<BR/>m2: [heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':25:1] ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':24:39: [1, 50]<BR/>heap[w]:pp@'go-testcases/collections/map/field-insensitive/map.go':25:1: [1, 100]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node1" -> "node4" [color="black"];
	"node0" -> "node2" [color="black"];
	"node2" -> "node3" [color="black"];
	"node3" -> "node1" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
