digraph {
	"node0" [shape="rect",color="black",label=<m := keyedLiteral(map[int32]int32)(85, 80, 81)<BR/>{{<BR/>heap [[ m: [heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41] ]]<BR/>value [[ heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[1]: [85, 85]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[2]: [80, 80]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[3]: [81, 81]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [m]>];
	"node1" [shape="rect",color="gray",label=<m::0(m, 0) = 0<BR/>{{<BR/>heap [[ m: [heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41] ]]<BR/>value [[ heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[0]: [0, 0]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[1]: [85, 85]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[2]: [80, 80]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[3]: [81, 81]<BR/>[stack: [0, 0]] ]]<BR/>}} -&gt; [heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[0]]>];
	"node2" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ m: [heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41] ]]<BR/>value [[ heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[0]: [0, 0]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[1]: [86, 86]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[2]: [80, 80]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[3]: [81, 81]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node3" [shape="rect",color="gray",label=<m::1(m, 1) = 86<BR/>{{<BR/>heap [[ m: [heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41] ]]<BR/>value [[ heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[0]: [0, 0]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[1]: [86, 86]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[2]: [80, 80]<BR/>heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[3]: [81, 81]<BR/>[stack: [86, 86]] ]]<BR/>}} -&gt; [heap[s]:pp@'go-testcases/collections/map/field-sensitive/map.go':17:41[1]]>];
	"node1" -> "node3" [color="black"];
	"node0" -> "node1" [color="black"];
	"node3" -> "node2" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
