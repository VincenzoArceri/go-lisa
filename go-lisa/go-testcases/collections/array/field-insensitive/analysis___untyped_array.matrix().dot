digraph {
	"node0" [shape="rect",color="black",label=<var a [4][2]int* = nonKeyedLit([4][2]int)(nonKeyedLit([2]int)(0, 0), nonKeyedLit([2]int)(1, 2), nonKeyedLit([2]int)(2, 4), nonKeyedLit([2]int)(3, 6))<BR/>{{<BR/>heap [[ a: [heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58] ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:36: [0, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:43: [1, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:50: [2, 4]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:57: [2, 6]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58: [4, 4]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [a]>];
	"node1" [shape="rect",color="gray",label=<a10 := a::1(a, 1)::0(a::1(a, 1), 0)<BR/>{{<BR/>heap [[ _|_ ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:36: [0, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:43: [1, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:50: [2, 4]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:57: [2, 6]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58: [4, 4]<BR/>[stack: [0, 0]] ]]<BR/>}} -&gt; [a10]>];
	"node2" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ _|_ ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:36: [0, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:43: [1, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:50: [2, 4]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:57: [2, 6]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58: [4, 4]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node3" [shape="rect",color="gray",label=<a11 := a::1(a, 1)::1(a::1(a, 1), 1)<BR/>{{<BR/>heap [[ _|_ ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:36: [0, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:43: [1, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:50: [2, 4]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:57: [2, 6]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58: [4, 4]<BR/>[stack: [1, 1]] ]]<BR/>}} -&gt; [a11]>];
	"node4" [shape="rect",color="gray",label=<a00 := a::0(a, 0)::0(a::0(a, 0), 0)<BR/>{{<BR/>heap [[ _|_ ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:36: [0, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:43: [1, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:50: [2, 4]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:57: [2, 6]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58: [4, 4]<BR/>[stack: [4, 4]] ]]<BR/>}} -&gt; [a00]>];
	"node5" [shape="rect",color="gray",label=<a30 := a::3(a, 3)::0(a::3(a, 3), 0)<BR/>{{<BR/>heap [[ _|_ ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:36: [0, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:43: [1, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:50: [2, 4]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:57: [2, 6]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58: [4, 4]<BR/>[stack: [0, 0]] ]]<BR/>}} -&gt; [a30]>];
	"node6" [shape="rect",color="gray",label=<a01 := a::0(a, 0)::1(a::0(a, 0), 1)<BR/>{{<BR/>heap [[ _|_ ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:36: [0, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:43: [1, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:50: [2, 4]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:57: [2, 6]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58: [4, 4]<BR/>[stack: [1, 1]] ]]<BR/>}} -&gt; [a01]>];
	"node7" [shape="rect",color="gray",label=<a20 := a::2(a, 2)::0(a::2(a, 2), 0)<BR/>{{<BR/>heap [[ _|_ ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:36: [0, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:43: [1, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:50: [2, 4]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:57: [2, 6]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58: [4, 4]<BR/>[stack: [0, 0]] ]]<BR/>}} -&gt; [a20]>];
	"node8" [shape="rect",color="gray",label=<a21 := a::2(a, 2)::1(a::2(a, 2), 1)<BR/>{{<BR/>heap [[ _|_ ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:36: [0, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:43: [1, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:50: [2, 4]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:57: [2, 6]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58: [4, 4]<BR/>[stack: [1, 1]] ]]<BR/>}} -&gt; [a21]>];
	"node9" [shape="rect",color="gray",label=<a31 := a::3(a, 3)::1(a::3(a, 3), 1)<BR/>{{<BR/>heap [[ _|_ ]]<BR/>value [[ heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:36: [0, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:43: [1, 2]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:50: [2, 4]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:57: [2, 6]<BR/>heap[w]:pp@'go-testcases/collections/array/field-insensitive/array.go':31:58: [4, 4]<BR/>[stack: [1, 1]] ]]<BR/>}} -&gt; [a31]>];
	"node1" -> "node3" [color="black"];
	"node3" -> "node7" [color="black"];
	"node4" -> "node6" [color="black"];
	"node5" -> "node9" [color="black"];
	"node0" -> "node4" [color="black"];
	"node6" -> "node1" [color="black"];
	"node7" -> "node8" [color="black"];
	"node8" -> "node5" [color="black"];
	"node9" -> "node2" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
