digraph {
	"node0" [shape="rect",color="black",label=<n = 0<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ n: [0, 0]<BR/>[stack: [0, 0]] ]]<BR/>}} -&gt; [n]>];
	"node1" [shape="rect",color="gray",label=<Open block: 'go-testcases/variablescoping/shadowing.go':58:2<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':56:1]:n: [0, 0]<BR/>['go-testcases/variablescoping/shadowing.go':58:2]:['go-testcases/variablescoping/shadowing.go':56:1]:n: [0, 0]<BR/>['go-testcases/variablescoping/shadowing.go':58:2]:n: [1, 1]<BR/>n: [1, 1]<BR/>[stack: [1, 1]] ]]<BR/>}} -&gt; [['go-testcases/variablescoping/shadowing.go':58:2]:n, n]>];
	"node2" [shape="rect",color="gray",label=<Close block: 'go-testcases/variablescoping/shadowing.go':58:2<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':56:1]:n: [0, 0]<BR/>n: [5, 5]<BR/>[stack: [5, 5]] ]]<BR/>}} -&gt; []>];
	"node3" [shape="rect",color="gray",label=<n = +(n, 1)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':56:1]:n: [0, 0]<BR/>n: [6, 6]<BR/>[stack: [6, 6]] ]]<BR/>}} -&gt; [n]>];
	"node4" [shape="rect",color="gray",label=<Close block: 'go-testcases/variablescoping/shadowing.go':56:1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ n: [0, 0]<BR/>[stack: [6, 6]] ]]<BR/>}} -&gt; []>];
	"node5" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ n: [0, 0]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node6" [shape="rect",color="gray",label=<n = 5<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':56:1]:n: [0, 0]<BR/>['go-testcases/variablescoping/shadowing.go':58:2]:['go-testcases/variablescoping/shadowing.go':56:1]:n: [0, 0]<BR/>['go-testcases/variablescoping/shadowing.go':58:2]:n: [5, 5]<BR/>n: [5, 5]<BR/>[stack: [5, 5]] ]]<BR/>}} -&gt; [n]>];
	"node7" [shape="rect",color="gray",label=<n := 1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':56:1]:n: [0, 0]<BR/>n: [1, 1]<BR/>[stack: [1, 1]] ]]<BR/>}} -&gt; [n]>];
	"node8" [shape="rect",color="gray",label=<Open block: 'go-testcases/variablescoping/shadowing.go':56:1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':56:1]:n: [0, 0]<BR/>n: [0, 0]<BR/>[stack: [0, 0]] ]]<BR/>}} -&gt; [['go-testcases/variablescoping/shadowing.go':56:1]:n, n]>];
	"node1" -> "node6" [color="black"];
	"node2" -> "node3" [color="black"];
	"node0" -> "node8" [color="black"];
	"node3" -> "node4" [color="black"];
	"node4" -> "node5" [color="black"];
	"node6" -> "node2" [color="black"];
	"node7" -> "node1" [color="black"];
	"node8" -> "node7" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
