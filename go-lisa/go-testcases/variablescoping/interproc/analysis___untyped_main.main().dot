digraph {
	"node0" [shape="rect",color="black",label=<x, y := main::f1()<BR/>{{<BR/>heap [[ call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12] ]]<BR/>value [[ heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[1]: [2, 2]<BR/>x: [1, 1]<BR/>y: [2, 2]<BR/>[stack: [2, 2]] ]]<BR/>}} -&gt; [y]>];
	"node1" [shape="rect",color="gray",label=<Open block: 'go-testcases/variablescoping/interproc/scoping.go':15:1<BR/>{{<BR/>heap [[ ['go-testcases/variablescoping/interproc/scoping.go':15:1]:call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12]<BR/>call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12] ]]<BR/>value [[ ['go-testcases/variablescoping/interproc/scoping.go':15:1]:x: [1, 1]<BR/>['go-testcases/variablescoping/interproc/scoping.go':15:1]:y: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[1]: [2, 2]<BR/>x: [1, 1]<BR/>y: [2, 2]<BR/>[stack: [2, 2]] ]]<BR/>}} -&gt; [['go-testcases/variablescoping/interproc/scoping.go':15:1]:y, y]>];
	"node2" [shape="rect",color="gray",label=<y = +(y, 1)<BR/>{{<BR/>heap [[ call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12] ]]<BR/>value [[ heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[1]: [4, 4]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[1]: [4, 4]<BR/>x: [2, 2]<BR/>y: [3, 3]<BR/>[stack: [3, 3]] ]]<BR/>}} -&gt; [y]>];
	"node3" [shape="rect",color="gray",label=<y = +(y, 1)<BR/>{{<BR/>heap [[ ['go-testcases/variablescoping/interproc/scoping.go':15:1]:call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12]<BR/>call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12]<BR/>call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':16:14: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14] ]]<BR/>value [[ ['go-testcases/variablescoping/interproc/scoping.go':15:1]:x: [1, 1]<BR/>['go-testcases/variablescoping/interproc/scoping.go':15:1]:y: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[1]: [4, 4]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[1]: [4, 4]<BR/>x: [4, 4]<BR/>y: [5, 5]<BR/>[stack: [5, 5]] ]]<BR/>}} -&gt; [y]>];
	"node4" [shape="rect",color="gray",label=<Close block: 'go-testcases/variablescoping/interproc/scoping.go':15:1<BR/>{{<BR/>heap [[ call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12] ]]<BR/>value [[ heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[1]: [4, 4]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[1]: [4, 4]<BR/>x: [1, 1]<BR/>y: [2, 2]<BR/>[stack: [5, 5]] ]]<BR/>}} -&gt; []>];
	"node5" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12] ]]<BR/>value [[ heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[1]: [4, 4]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[1]: [4, 4]<BR/>x: [2, 2]<BR/>y: [3, 3]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node6" [shape="rect",color="gray",label=<x = +(x, 1)<BR/>{{<BR/>heap [[ call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12] ]]<BR/>value [[ heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[1]: [4, 4]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[1]: [4, 4]<BR/>x: [2, 2]<BR/>y: [2, 2]<BR/>[stack: [2, 2]] ]]<BR/>}} -&gt; [x]>];
	"node7" [shape="rect",color="gray",label=<x = +(x, 1)<BR/>{{<BR/>heap [[ ['go-testcases/variablescoping/interproc/scoping.go':15:1]:call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12]<BR/>call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12]<BR/>call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':16:14: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14] ]]<BR/>value [[ ['go-testcases/variablescoping/interproc/scoping.go':15:1]:x: [1, 1]<BR/>['go-testcases/variablescoping/interproc/scoping.go':15:1]:y: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[1]: [4, 4]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[1]: [4, 4]<BR/>x: [4, 4]<BR/>y: [4, 4]<BR/>[stack: [4, 4]] ]]<BR/>}} -&gt; [x]>];
	"node8" [shape="rect",color="gray",label=<x, y := main::f2()<BR/>{{<BR/>heap [[ ['go-testcases/variablescoping/interproc/scoping.go':15:1]:call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12]<BR/>call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':13:12: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12]<BR/>call_ret_value@'go-testcases/variablescoping/interproc/scoping.go':16:14: [heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14] ]]<BR/>value [[ ['go-testcases/variablescoping/interproc/scoping.go':15:1]:x: [1, 1]<BR/>['go-testcases/variablescoping/interproc/scoping.go':15:1]:y: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':13:12[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':16:14[1]: [4, 4]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[0]: [1, 1]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':4:11[1]: [2, 2]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[0]: [3, 3]<BR/>heap[s]:pp@'go-testcases/variablescoping/interproc/scoping.go':8:11[1]: [4, 4]<BR/>x: [3, 3]<BR/>y: [4, 4]<BR/>[stack: [4, 4]] ]]<BR/>}} -&gt; [y]>];
	"node1" -> "node8" [color="black"];
	"node2" -> "node5" [color="black"];
	"node3" -> "node4" [color="black"];
	"node4" -> "node6" [color="black"];
	"node0" -> "node1" [color="black"];
	"node6" -> "node2" [color="black"];
	"node7" -> "node3" [color="black"];
	"node8" -> "node7" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
