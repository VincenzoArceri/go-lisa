digraph {
	"node0" [shape="rect",color="black",label=<v := 1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ v: [1, 1]<BR/>[stack: [1, 1]] ]]<BR/>}} -&gt; [v]>];
	"node1" [shape="rect",color="gray",label=<Open block: 'go-testcases/variablescoping/shadowing.go':26:2<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':24:1]:v: [1, 1]<BR/>['go-testcases/variablescoping/shadowing.go':26:2]:['go-testcases/variablescoping/shadowing.go':24:1]:v: [1, 1]<BR/>['go-testcases/variablescoping/shadowing.go':26:2]:v: [2, 2]<BR/>v: [2, 2]<BR/>[stack: [2, 2]] ]]<BR/>}} -&gt; [['go-testcases/variablescoping/shadowing.go':26:2]:v, v]>];
	"node2" [shape="rect",color="gray",label=<Close block: 'go-testcases/variablescoping/shadowing.go':26:2<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':24:1]:v: [1, 1]<BR/>v: [3, 3]<BR/>[stack: [3, 3]] ]]<BR/>}} -&gt; []>];
	"node3" [shape="rect",color="gray",label=<v = +(v, 1)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':24:1]:v: [1, 1]<BR/>v: [4, 4]<BR/>[stack: [4, 4]] ]]<BR/>}} -&gt; [v]>];
	"node4" [shape="rect",color="gray",label=<Close block: 'go-testcases/variablescoping/shadowing.go':24:1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ v: [1, 1]<BR/>[stack: [4, 4]] ]]<BR/>}} -&gt; []>];
	"node5" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ v: [0, 0]<BR/>[stack: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node6" [shape="rect",color="gray",label=<v := 2<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':24:1]:v: [1, 1]<BR/>v: [2, 2]<BR/>[stack: [2, 2]] ]]<BR/>}} -&gt; [v]>];
	"node7" [shape="rect",color="gray",label=<v = +(v, 1)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':24:1]:v: [1, 1]<BR/>['go-testcases/variablescoping/shadowing.go':26:2]:['go-testcases/variablescoping/shadowing.go':24:1]:v: [1, 1]<BR/>['go-testcases/variablescoping/shadowing.go':26:2]:v: [3, 3]<BR/>v: [3, 3]<BR/>[stack: [3, 3]] ]]<BR/>}} -&gt; [v]>];
	"node8" [shape="rect",color="gray",label=<v = -(v, 1)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ v: [0, 0]<BR/>[stack: [0, 0]] ]]<BR/>}} -&gt; [v]>];
	"node9" [shape="rect",color="gray",label=<Open block: 'go-testcases/variablescoping/shadowing.go':24:1<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ ['go-testcases/variablescoping/shadowing.go':24:1]:v: [1, 1]<BR/>v: [1, 1]<BR/>[stack: [1, 1]] ]]<BR/>}} -&gt; [['go-testcases/variablescoping/shadowing.go':24:1]:v, v]>];
	"node1" -> "node7" [color="black"];
	"node0" -> "node9" [color="black"];
	"node2" -> "node3" [color="black"];
	"node3" -> "node4" [color="black"];
	"node4" -> "node8" [color="black"];
	"node6" -> "node1" [color="black"];
	"node7" -> "node2" [color="black"];
	"node8" -> "node5" [color="black"];
	"node9" -> "node6" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
