digraph {
	labelloc="t";
	label="['go-testcases/interprocedural/interproc2/interprocedural.go':15:27]";
	"node0" [shape="rect",color="black",label=<res := nonKeyedLit([3]int)(a, b, c)<BR/>{{<BR/>heap [[ res: [heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':5:21] ]]<BR/>value [[ a: [1, 1]<BR/>b: [2, 2]<BR/>c: [3, 3]<BR/>heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':5:21: [1, 3]<BR/>[stack: [1, 3]] ]]<BR/>}} -&gt; [res]>];
	"node1" [shape="rect",color="black",peripheries="2",label=<return main::identity(res)<BR/>{{<BR/>heap [[ ['go-testcases/interprocedural/interproc2/interprocedural.go':16:28]:arr1: [heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':15:8]<BR/>res: [heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':5:21]<BR/>ret_value@build: [heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':6:21] ]]<BR/>value [[ a: [-5, 1]<BR/>b: [2, 5]<BR/>c: [3, 6]<BR/>heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':10:2: [-5, 6]<BR/>heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':11:9: [-5, 6]<BR/>heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':15:27: [-5, 6]<BR/>heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':15:8: [-5, 6]<BR/>heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':5:21: [-5, 6]<BR/>heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':6:21: [-5, 6]<BR/>heap[w]:pp@'go-testcases/interprocedural/interproc2/interprocedural.go':9:15: [-5, 6]<BR/>[stack: [-5, 6]] ]]<BR/>}} -&gt; [ret_value@build]>];
	"node0" -> "node1" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
