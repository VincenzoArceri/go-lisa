digraph {
	labelloc="t";
	label="['go-testcases/interprocedural/interproc4/interprocedural.go':20:14]";
	"node0" [shape="rect",color="black",peripheries="2",label=<return +(*(v::X(v, X), v::X(v, X)), *(v::Y(v, Y), v::Y(v, Y)))<BR/>{{<BR/>heap [[ ['go-testcases/interprocedural/interproc4/interprocedural.go':20:14]:v: [heap[s]:pp@'go-testcases/interprocedural/interproc4/interprocedural.go':19:17]<BR/>v: [heap[s]:pp@'go-testcases/interprocedural/interproc4/interprocedural.go':14:6] ]]<BR/>value [[ heap[s]:pp@'go-testcases/interprocedural/interproc4/interprocedural.go':14:6[X]: [3, 3]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc4/interprocedural.go':14:6[Y]: [4, 4]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc4/interprocedural.go':19:17[X]: [3, 3]<BR/>heap[s]:pp@'go-testcases/interprocedural/interproc4/interprocedural.go':19:17[Y]: [4, 4]<BR/>ret_value@f1: [25, 25]<BR/>[stack: [25, 25]] ]]<BR/>}} -&gt; [ret_value@f1]>];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
